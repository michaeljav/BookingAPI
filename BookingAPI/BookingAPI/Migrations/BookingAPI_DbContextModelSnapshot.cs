// <auto-generated />
using System;
using BookingAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookingAPI.Migrations
{
    [DbContext(typeof(BookingAPI_DbContext))]
    partial class BookingAPI_DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("BookingAPI.Entities.EndUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EndUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "michaeljaviermota@gmail.com",
                            FirstName = "Michael",
                            LastName = "Javier Mota"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Joelina@gmail.com",
                            FirstName = "Joelina",
                            LastName = "Amador Sanchez"
                        });
                });

            modelBuilder.Entity("BookingAPI.Entities.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Adults")
                        .HasColumnType("int");

                    b.Property<DateTime>("CheckInDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Children")
                        .HasColumnType("int");

                    b.Property<int?>("EndUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDateTimeFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReservationDateTimeTo")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EndUserId");

                    b.HasIndex("RoomId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("BookingAPI.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BedsNum")
                        .HasColumnType("int");

                    b.Property<string>("HotelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            BedsNum = 2,
                            HotelName = "Cancun",
                            State = 1
                        },
                        new
                        {
                            Id = 12,
                            BedsNum = 1,
                            HotelName = "Cancun",
                            State = 0
                        });
                });

            modelBuilder.Entity("BookingAPI.Entities.Reservation", b =>
                {
                    b.HasOne("BookingAPI.Entities.EndUser", "EndUser")
                        .WithMany()
                        .HasForeignKey("EndUserId");

                    b.HasOne("BookingAPI.Entities.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId");

                    b.Navigation("EndUser");

                    b.Navigation("Room");
                });
#pragma warning restore 612, 618
        }
    }
}
